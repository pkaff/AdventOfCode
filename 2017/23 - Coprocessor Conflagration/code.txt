addi 5 16 5 // ip += 16 // jump to ln 18
seti 1 1 2 // i[2] = 1
seti 1 8 1 // i[1] = 1
mulr 2 1 3 // i[3] = i[2]*i[1] // i[3] = 2
eqrr 3 4 3 // i[3] = i[3] == i[4]
addr 3 5 5 // ip += i[3] // +1 if i[4] == 2
addi 5 1 5 // ip += 1
addr 2 0 0 // i[0] += i[2]
addi 1 1 1 // i[1] += 1
gtrr 1 4 3 // i[3] = i[1] > i[4]
addr 5 3 5 // ip += i[3]
seti 2 6 5 // ip = 2 //jump to ln 4
addi 2 1 2 // i[2] += 1
gtrr 2 4 3 // i[3] = i[2] > i[4]
addr 3 5 5 // ip += i[3] //terminate if i[2] > i[4]
seti 1 2 5 // ip = 1 //jump to ln 3
mulr 5 5 5 // ip *= 5 //terminate
addi 4 2 4 // i[4] += 2 // i4 = ((i[4] + 2)^2)*19*11
mulr 4 4 4 // i[4] *= i[4]
mulr 5 4 4 // i[4] *= ip
muli 4 11 4 // i[4] *= 11
addi 3 2 3 // i[3] += 2 // i3 = ((i[3] + 2) * 22) + 13
mulr 3 5 3 // i[3] *= ip
addi 3 13 3 // i[3] += 13
addr 4 3 4 // i[4] += i[3] // i4 = ((i[4] + 2)^2)*19*11 + ((i[3] + 2) * 22) + 13
addr 5 0 5 // ip += i[0] //jump i[0] steps
seti 0 8 5 // ip = 0 // jump to ln 2
setr 5 5 3 // i[3] = ip // ((27 * 28) + 29) * 30 * 14 * 32 = 10550400
mulr 3 5 3 // i[3] *= ip
addr 5 3 3 // i[3] += ip
mulr 5 3 3 // i[3] *= ip
muli 3 14 3 // i[3] *= 14
mulr 3 5 3 // i[3] *= ip
addr 4 3 4 // i[4] += i[3] // i[4] += 10550400 => 10551293
seti 0 9 0 // i[0] = 0 
seti 0 9 5 // ip = 0 //jump to ln 2